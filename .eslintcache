[{"C:\\4020\\4020FrontEnd\\src\\App.js":"1","C:\\4020\\4020FrontEnd\\src\\components\\about\\About.js":"2","C:\\4020\\4020FrontEnd\\src\\components\\chartPanel\\maps\\MapChart.js":"3","C:\\4020\\4020FrontEnd\\src\\components\\inputs\\select\\SingleSelect.js":"4","C:\\4020\\4020FrontEnd\\src\\components\\chartPanel\\maps\\utils.js":"5","C:\\4020\\4020FrontEnd\\src\\components\\header\\Header.js":"6","C:\\4020\\4020FrontEnd\\src\\components\\chartPanel\\ChartPanel.js":"7","C:\\4020\\4020FrontEnd\\src\\utils\\constants.js":"8","C:\\4020\\4020FrontEnd\\src\\components\\inputs\\select\\MultiSelect.js":"9","C:\\4020\\4020FrontEnd\\src\\redux\\reducers\\mobility.js":"10","C:\\4020\\4020FrontEnd\\src\\redux\\actions\\mobility.js":"11","C:\\4020\\4020FrontEnd\\src\\components\\tablePanel\\tablePanel.js":"12","C:\\4020\\4020FrontEnd\\src\\components\\covidTable\\CovidTable.js":"13","C:\\4020\\4020FrontEnd\\src\\redux\\actions\\actions.js":"14","C:\\4020\\4020FrontEnd\\src\\components\\datePicker\\DatePicker.js":"15","C:\\4020\\4020FrontEnd\\src\\redux\\store.js":"16","C:\\4020\\4020FrontEnd\\src\\components\\inputs\\search\\Search.js":"17","C:\\4020\\4020FrontEnd\\src\\utils\\Server.js":"18","C:\\4020\\4020FrontEnd\\src\\components\\footer\\Footer.js":"19","C:\\4020\\4020FrontEnd\\src\\reportWebVitals.js":"20"},{"size":1413,"mtime":1607699618145,"results":"21","hashOfConfig":"22"},{"size":3170,"mtime":1606599352515,"results":"23","hashOfConfig":"22"},{"size":3646,"mtime":1607698761838,"results":"24","hashOfConfig":"22"},{"size":1155,"mtime":1607643912609,"results":"25","hashOfConfig":"22"},{"size":752,"mtime":1607621851755,"results":"26","hashOfConfig":"22"},{"size":1401,"mtime":1607627205040,"results":"27","hashOfConfig":"22"},{"size":1513,"mtime":1607700592957,"results":"28","hashOfConfig":"22"},{"size":190,"mtime":1607641669944,"results":"29","hashOfConfig":"22"},{"size":1765,"mtime":1606590743253,"results":"30","hashOfConfig":"22"},{"size":952,"mtime":1607695763963,"results":"31","hashOfConfig":"22"},{"size":739,"mtime":1607695816025,"results":"32","hashOfConfig":"22"},{"size":4233,"mtime":1607697141191,"results":"33","hashOfConfig":"22"},{"size":5474,"mtime":1607696557311,"results":"34","hashOfConfig":"22"},{"size":225,"mtime":1607695777511,"results":"35","hashOfConfig":"22"},{"size":952,"mtime":1607697177636,"results":"36","hashOfConfig":"22"},{"size":334,"mtime":1607694500949,"results":"37","hashOfConfig":"22"},{"size":873,"mtime":1606598791465,"results":"38","hashOfConfig":"22"},{"size":154,"mtime":1607644744736,"results":"39","hashOfConfig":"22"},{"size":965,"mtime":1606577940855,"results":"40","hashOfConfig":"22"},{"size":362,"mtime":1606573665789,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"b7tyy1",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"C:\\4020\\4020FrontEnd\\src\\App.js",[],["90","91"],"C:\\4020\\4020FrontEnd\\src\\components\\about\\About.js",[],["92","93"],"C:\\4020\\4020FrontEnd\\src\\components\\chartPanel\\maps\\MapChart.js",["94"],"import React, { useState } from \"react\";\r\nimport { SVGMap } from \"react-svg-map\";\r\nimport { getLocationName } from \"./utils\";\r\nimport \"react-svg-map/lib/index.css\";\r\nimport { Typography, Link } from \"@material-ui/core\";\r\n\r\nconst MapChart = (props) => {\r\n  const { map, country, data, metric } = props;\r\n  const [pointedLocation, setPointedLocation] = useState(null);\r\n  const [tooltipStyle, setTooltipStyle] = useState({ display: \"none\" });\r\n  const [metr, setMetr] = useState(\r\n    metric === \"Public Transit\" ? \"transit\" : metric.toLowerCase()\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    setMetr(metric === \"Public Transit\" ? \"transit\" : metric.toLowerCase());\r\n  }, [metric]);\r\n\r\n  const handleLocationMouseOver = (event) => {\r\n    const location = getLocationName(event);\r\n    setPointedLocation(location);\r\n  };\r\n\r\n  const handleLocationMouseOut = (event) => {\r\n    setPointedLocation(null);\r\n    setTooltipStyle({ display: \"none\" });\r\n  };\r\n\r\n  const handleLocationMouseMove = (event) => {\r\n    const tooltipStyle = {\r\n      display: \"block\",\r\n      top: event.clientY + 10,\r\n      left: event.clientX - 100,\r\n    };\r\n    setTooltipStyle({ ...tooltipStyle });\r\n  };\r\n\r\n  const calcPercentage = (value, max, min) => {\r\n    if (max === min) return 0;\r\n    return (value - min) / (max - min);\r\n  };\r\n\r\n  const getValue = (name) => {\r\n    if (name === \"Yukon\") {\r\n      name = \"Yukon Territory\";\r\n    } else if (name === \"Nunavut\") {\r\n      return \"Unavailable\";\r\n    }\r\n    if (data.regions[name]) {\r\n      return data.regions[name][metr] || \"Unavailable\";\r\n    }\r\n  };\r\n\r\n  const getLocationClassName = (location, index) => {\r\n    const abbr = country === \"United States\" ? \"usa\" : \"can\";\r\n    let name = location.name;\r\n    if (name === \"Yukon\") {\r\n      name = \"Yukon Territory\";\r\n    }\r\n    if (data.regions[name]) {\r\n      const value = data.regions[name][metr];\r\n      const max = data.max[metr];\r\n      const min = data.min[metr];\r\n      let increment = (calcPercentage(value, max, min) * 10).toFixed(0);\r\n      if (increment >= 10 || increment < 0) {\r\n        increment = 0;\r\n      }\r\n      return `${abbr}_heat_${Math.abs(increment)}`;\r\n    }\r\n  };\r\n\r\n  const getMinMaxMessage = () => {\r\n    return `Minimum value for ${metric} in the date range selected is ${data.min[metr]} and the maximum is ${data.max[metr]}`;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"examples__block__map examples__block__map--usa\"\r\n      style={{ width: \"100%\" }}\r\n    >\r\n      <SVGMap\r\n        className=\"svgMapClass\"\r\n        map={map}\r\n        locationClassName={getLocationClassName}\r\n        onLocationMouseOver={handleLocationMouseOver}\r\n        onLocationMouseOut={handleLocationMouseOut}\r\n        onLocationMouseMove={handleLocationMouseMove}\r\n      />\r\n      {country === \"Canada\" ? (\r\n        <Typography align=\"center\" variant=\"h6\">\r\n          *No data is available for Nunavut*\r\n        </Typography>\r\n      ) : null}\r\n      <Typography align=\"center\">\r\n        Data is based on a base value of 100 taken on 2020/01/13.\r\n      </Typography>\r\n      <Typography align=\"center\">\r\n        Minimum value for {metric} in the date range selected is{\" \"}\r\n        {data.min[metr]} and the maximum is {data.max[metr]}\r\n      </Typography>\r\n      <Typography align=\"center\">\r\n        <Link href=\"https://covid19.apple.com/mobility\">\r\n          *Data is based on Apple Mobility Data.*\r\n        </Link>\r\n      </Typography>\r\n      <div className=\"examples__block__map__tooltip\" style={tooltipStyle}>\r\n        <div>{pointedLocation}</div>\r\n        <div>Value: {getValue(pointedLocation)}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n",["95","96"],"C:\\4020\\4020FrontEnd\\src\\components\\inputs\\select\\SingleSelect.js",[],"C:\\4020\\4020FrontEnd\\src\\components\\chartPanel\\maps\\utils.js",[],"C:\\4020\\4020FrontEnd\\src\\components\\header\\Header.js",["97"],"C:\\4020\\4020FrontEnd\\src\\components\\chartPanel\\ChartPanel.js",[],"C:\\4020\\4020FrontEnd\\src\\utils\\constants.js",[],"C:\\4020\\4020FrontEnd\\src\\components\\inputs\\select\\MultiSelect.js",[],["98","99"],"C:\\4020\\4020FrontEnd\\src\\redux\\reducers\\mobility.js",[],["100","101"],"C:\\4020\\4020FrontEnd\\src\\redux\\actions\\mobility.js",[],"C:\\4020\\4020FrontEnd\\src\\components\\tablePanel\\tablePanel.js",["102"],"import React from \"react\";\r\nimport MultiSelect from \"../inputs/select/MultiSelect\";\r\nimport { Grid, Button, Box } from \"@material-ui/core\";\r\nimport Search from \"../inputs/search/Search\";\r\nimport CovidTable from \"../covidTable/CovidTable\";\r\nimport DatePicker from \"../datePicker/DatePicker\";\r\nimport { MOBILITY_OPTIONS } from \"../../utils/constants\";\r\nimport Server from \"../../utils/Server\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setObj,\r\n  setArr,\r\n  clearObj,\r\n  clearArr,\r\n  setLoading,\r\n  clearLoading,\r\n} from \"../../redux/actions/mobility\";\r\n\r\nconst TablePanel = (props) => {\r\n  const { changeCountry, country } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const [selectedMobility, setSelectedMobility] = React.useState([\r\n    ...MOBILITY_OPTIONS,\r\n  ]);\r\n\r\n  const [fromDate, setFromDate] = React.useState(\r\n    new Date(\"2020-01-13T00:00:00\")\r\n  );\r\n  const [toDate, setToDate] = React.useState(new Date(\"2020-11-21T00:00:00\"));\r\n\r\n  const [search, setSearch] = React.useState(\"\");\r\n\r\n  // const [data, setData] = React.useState([]);\r\n  const data = useSelector((state) => state.data.arr);\r\n  const loading = useSelector((state) => state.data.loading);\r\n  const [filteredData, setFilteredData] = React.useState([]);\r\n\r\n  const updateCountry = (response) => {\r\n    const data = [];\r\n    for (const [key, value] of Object.entries(response)) {\r\n      data.push({\r\n        region: key,\r\n        driving: value.driving,\r\n        \"public transit\": value.transit,\r\n        walking: value.walking,\r\n      });\r\n    }\r\n    // setData(data);\r\n    dispatch(setArr(data));\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(clearObj());\r\n    dispatch(clearArr());\r\n    dispatch(setLoading());\r\n    Server.get(\r\n      `/mobility/apple?countryName=${country}&fromDate=${fromDate}&toDate=${toDate}`\r\n    )\r\n      .then((response) => {\r\n        updateCountry(response.data.regions);\r\n        dispatch(setObj(response.data));\r\n        dispatch(clearLoading());\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        dispatch(clearArr());\r\n        dispatch(clearObj());\r\n        dispatch(clearLoading());\r\n      });\r\n  }, [fromDate, toDate, country]);\r\n\r\n  React.useEffect(() => {\r\n    setFilteredData(\r\n      data.filter((x) => x.region.toLowerCase().includes(search.toLowerCase()))\r\n    );\r\n  }, [search, data]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Box display=\"flex\" justifyContent=\"center\" mt={2}>\r\n            <Box mx={1}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => changeCountry(\"USA\")}\r\n              >\r\n                USA\r\n              </Button>\r\n            </Box>\r\n            <Box mx={1}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => changeCountry(\"CAN\")}\r\n              >\r\n                Canada\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box display=\"flex\" justifyContent=\"center\">\r\n            <MultiSelect\r\n              options={MOBILITY_OPTIONS}\r\n              label=\"Mobility\"\r\n              selected={selectedMobility}\r\n              setSelected={setSelectedMobility}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box display=\"flex\" justifyContent=\"center\">\r\n            <Box mx={1}>\r\n              <DatePicker label=\"From\" date={fromDate} setDate={setFromDate} />\r\n            </Box>\r\n            <Box mx={1}>\r\n              <DatePicker label=\"To\" date={toDate} setDate={setToDate} />\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box display=\"flex\" justifyContent=\"center\" mx={3}>\r\n            <Search search={search} setSearch={setSearch} />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box m={2}>\r\n            <CovidTable\r\n              data={filteredData}\r\n              options={[...selectedMobility]}\r\n              loading={loading}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TablePanel;\r\n","C:\\4020\\4020FrontEnd\\src\\components\\covidTable\\CovidTable.js",[],"C:\\4020\\4020FrontEnd\\src\\redux\\actions\\actions.js",[],"C:\\4020\\4020FrontEnd\\src\\components\\datePicker\\DatePicker.js",[],"C:\\4020\\4020FrontEnd\\src\\redux\\store.js",[],"C:\\4020\\4020FrontEnd\\src\\components\\inputs\\search\\Search.js",[],"C:\\4020\\4020FrontEnd\\src\\utils\\Server.js",[],"C:\\4020\\4020FrontEnd\\src\\components\\footer\\Footer.js",[],"C:\\4020\\4020FrontEnd\\src\\reportWebVitals.js",[],["103","104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"105","replacedBy":"109"},{"ruleId":"107","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":72,"column":9,"nodeType":"113","messageId":"114","endLine":72,"endColumn":25},{"ruleId":"105","replacedBy":"115"},{"ruleId":"107","replacedBy":"116"},{"ruleId":"111","severity":1,"message":"117","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":14},{"ruleId":"105","replacedBy":"118"},{"ruleId":"107","replacedBy":"119"},{"ruleId":"105","replacedBy":"120"},{"ruleId":"107","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":71,"column":6,"nodeType":"124","endLine":71,"endColumn":33,"suggestions":"125"},{"ruleId":"105","replacedBy":"126"},{"ruleId":"107","replacedBy":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],["128"],["129"],"no-unused-vars","'getMinMaxMessage' is assigned a value but never used.","Identifier","unusedVar",["128"],["129"],"'Button' is defined but never used.",["128"],["129"],["128"],["129"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch' and 'updateCountry'. Either include them or remove the dependency array.","ArrayExpression",["130"],["128"],["129"],"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [fromDate, toDate, country, dispatch, updateCountry]",{"range":"133","text":"134"},[2157,2184],"[fromDate, toDate, country, dispatch, updateCountry]"]