[{"C:\\4020\\4020FrontEnd\\src\\App.js":"1","C:\\4020\\4020FrontEnd\\src\\components\\about\\About.js":"2","C:\\4020\\4020FrontEnd\\src\\components\\chartPanel\\maps\\MapChart.js":"3","C:\\4020\\4020FrontEnd\\src\\components\\inputs\\select\\SingleSelect.js":"4","C:\\4020\\4020FrontEnd\\src\\components\\chartPanel\\maps\\utils.js":"5","C:\\4020\\4020FrontEnd\\src\\components\\header\\Header.js":"6","C:\\4020\\4020FrontEnd\\src\\components\\chartPanel\\ChartPanel.js":"7","C:\\4020\\4020FrontEnd\\src\\utils\\constants.js":"8","C:\\4020\\4020FrontEnd\\src\\components\\inputs\\select\\MultiSelect.js":"9","C:\\4020\\4020FrontEnd\\src\\redux\\reducers\\mobility.js":"10","C:\\4020\\4020FrontEnd\\src\\redux\\actions\\mobility.js":"11","C:\\4020\\4020FrontEnd\\src\\components\\tablePanel\\tablePanel.js":"12","C:\\4020\\4020FrontEnd\\src\\components\\covidTable\\CovidTable.js":"13","C:\\4020\\4020FrontEnd\\src\\redux\\actions\\actions.js":"14","C:\\4020\\4020FrontEnd\\src\\components\\datePicker\\DatePicker.js":"15","C:\\4020\\4020FrontEnd\\src\\redux\\store.js":"16","C:\\4020\\4020FrontEnd\\src\\components\\inputs\\search\\Search.js":"17","C:\\4020\\4020FrontEnd\\src\\utils\\Server.js":"18","C:\\4020\\4020FrontEnd\\src\\components\\footer\\Footer.js":"19","C:\\4020\\4020FrontEnd\\src\\reportWebVitals.js":"20"},{"size":1413,"mtime":1607699618145,"results":"21","hashOfConfig":"22"},{"size":3217,"mtime":1607716076849,"results":"23","hashOfConfig":"22"},{"size":3649,"mtime":1607716344150,"results":"24","hashOfConfig":"22"},{"size":1155,"mtime":1607643912609,"results":"25","hashOfConfig":"22"},{"size":752,"mtime":1607621851755,"results":"26","hashOfConfig":"22"},{"size":1401,"mtime":1607627205040,"results":"27","hashOfConfig":"22"},{"size":1513,"mtime":1607700592957,"results":"28","hashOfConfig":"22"},{"size":190,"mtime":1607641669944,"results":"29","hashOfConfig":"22"},{"size":1765,"mtime":1606590743253,"results":"30","hashOfConfig":"22"},{"size":952,"mtime":1607695763963,"results":"31","hashOfConfig":"22"},{"size":739,"mtime":1607695816025,"results":"32","hashOfConfig":"22"},{"size":4945,"mtime":1607716268010,"results":"33","hashOfConfig":"22"},{"size":5474,"mtime":1607696557311,"results":"34","hashOfConfig":"22"},{"size":225,"mtime":1607695777511,"results":"35","hashOfConfig":"22"},{"size":952,"mtime":1607697177636,"results":"36","hashOfConfig":"22"},{"size":334,"mtime":1607694500949,"results":"37","hashOfConfig":"22"},{"size":873,"mtime":1606598791465,"results":"38","hashOfConfig":"22"},{"size":154,"mtime":1607644744736,"results":"39","hashOfConfig":"22"},{"size":965,"mtime":1606577940855,"results":"40","hashOfConfig":"22"},{"size":362,"mtime":1606573665789,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"b7tyy1",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"C:\\4020\\4020FrontEnd\\src\\App.js",[],["89","90"],"C:\\4020\\4020FrontEnd\\src\\components\\about\\About.js",[],"C:\\4020\\4020FrontEnd\\src\\components\\chartPanel\\maps\\MapChart.js",["91"],"import React, { useState } from \"react\";\r\nimport { SVGMap } from \"react-svg-map\";\r\nimport { getLocationName } from \"./utils\";\r\nimport \"react-svg-map/lib/index.css\";\r\nimport { Typography, Link } from \"@material-ui/core\";\r\n\r\nconst MapChart = (props) => {\r\n  const { map, country, data, metric } = props;\r\n  const [pointedLocation, setPointedLocation] = useState(null);\r\n  const [tooltipStyle, setTooltipStyle] = useState({ display: \"none\" });\r\n  const [metr, setMetr] = useState(\r\n    metric === \"Public Transit\" ? \"transit\" : metric.toLowerCase()\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    setMetr(metric === \"Public Transit\" ? \"transit\" : metric.toLowerCase());\r\n  }, [metric]);\r\n\r\n  const handleLocationMouseOver = (event) => {\r\n    const location = getLocationName(event);\r\n    setPointedLocation(location);\r\n  };\r\n\r\n  const handleLocationMouseOut = (event) => {\r\n    setPointedLocation(null);\r\n    setTooltipStyle({ display: \"none\" });\r\n  };\r\n\r\n  const handleLocationMouseMove = (event) => {\r\n    const tooltipStyle = {\r\n      display: \"block\",\r\n      top: event.clientY + 10,\r\n      left: event.clientX - 100,\r\n    };\r\n    setTooltipStyle({ ...tooltipStyle });\r\n  };\r\n\r\n  const calcPercentage = (value, max, min) => {\r\n    if (max === min) return 0;\r\n    return (value - min) / (max - min);\r\n  };\r\n\r\n  const getValue = (name) => {\r\n    if (name === \"Yukon\") {\r\n      name = \"Yukon Territory\";\r\n    } else if (name === \"Nunavut\") {\r\n      return \"Unavailable\";\r\n    }\r\n    if (data.regions[name]) {\r\n      return data.regions[name][metr] || \"Unavailable\";\r\n    }\r\n  };\r\n\r\n  const getLocationClassName = (location, index) => {\r\n    const abbr = country === \"United States\" ? \"usa\" : \"can\";\r\n    let name = location.name;\r\n    if (name === \"Yukon\") {\r\n      name = \"Yukon Territory\";\r\n    }\r\n    if (data.regions[name]) {\r\n      const value = data.regions[name][metr];\r\n      const max = data.max[metr];\r\n      const min = data.min[metr];\r\n      let increment = (calcPercentage(value, max, min) * 10).toFixed(0);\r\n      if (increment >= 10 || increment < 0) {\r\n        increment = 0;\r\n      }\r\n      return `${abbr}_heat_${Math.abs(increment)}`;\r\n    }\r\n  };\r\n\r\n  const getMinMaxMessage = () => {\r\n    return `Minimum value for ${metric} in the date range selected is ${data.min[metr]} and the maximum is ${data.max[metr]}`;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"examples__block__map examples__block__map--usa\"\r\n      style={{ width: \"100%\" }}\r\n    >\r\n      <SVGMap\r\n        className=\"svgMapClass\"\r\n        map={map}\r\n        locationClassName={getLocationClassName}\r\n        onLocationMouseOver={handleLocationMouseOver}\r\n        onLocationMouseOut={handleLocationMouseOut}\r\n        onLocationMouseMove={handleLocationMouseMove}\r\n      />\r\n      {country === \"Canada\" ? (\r\n        <Typography align=\"center\" variant=\"h6\">\r\n          *No data is available for Nunavut*\r\n        </Typography>\r\n      ) : null}\r\n      <Typography align=\"center\">\r\n        Data is relative to a base value of 100 taken on 2020/01/13.\r\n      </Typography>\r\n      <Typography align=\"center\">\r\n        Minimum value for {metric} in the date range selected is{\" \"}\r\n        {data.min[metr]} and the maximum is {data.max[metr]}\r\n      </Typography>\r\n      <Typography align=\"center\">\r\n        <Link href=\"https://covid19.apple.com/mobility\">\r\n          *Data is based on Apple Mobility Data.*\r\n        </Link>\r\n      </Typography>\r\n      <div className=\"examples__block__map__tooltip\" style={tooltipStyle}>\r\n        <div>{pointedLocation}</div>\r\n        <div>Value: {getValue(pointedLocation)}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n","C:\\4020\\4020FrontEnd\\src\\components\\inputs\\select\\SingleSelect.js",[],["92","93"],"C:\\4020\\4020FrontEnd\\src\\components\\chartPanel\\maps\\utils.js",[],"C:\\4020\\4020FrontEnd\\src\\components\\header\\Header.js",["94"],"C:\\4020\\4020FrontEnd\\src\\components\\chartPanel\\ChartPanel.js",[],"C:\\4020\\4020FrontEnd\\src\\utils\\constants.js",[],["95","96"],"C:\\4020\\4020FrontEnd\\src\\components\\inputs\\select\\MultiSelect.js",[],["97","98"],"C:\\4020\\4020FrontEnd\\src\\redux\\reducers\\mobility.js",[],["99","100"],"C:\\4020\\4020FrontEnd\\src\\redux\\actions\\mobility.js",[],"C:\\4020\\4020FrontEnd\\src\\components\\tablePanel\\tablePanel.js",["101"],"C:\\4020\\4020FrontEnd\\src\\components\\covidTable\\CovidTable.js",[],"C:\\4020\\4020FrontEnd\\src\\redux\\actions\\actions.js",[],"C:\\4020\\4020FrontEnd\\src\\components\\datePicker\\DatePicker.js",[],"C:\\4020\\4020FrontEnd\\src\\redux\\store.js",[],"C:\\4020\\4020FrontEnd\\src\\components\\inputs\\search\\Search.js",[],"C:\\4020\\4020FrontEnd\\src\\utils\\Server.js",[],"C:\\4020\\4020FrontEnd\\src\\components\\footer\\Footer.js",[],"C:\\4020\\4020FrontEnd\\src\\reportWebVitals.js",[],["102","103"],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":72,"column":9,"nodeType":"110","messageId":"111","endLine":72,"endColumn":25},{"ruleId":"104","replacedBy":"112"},{"ruleId":"106","replacedBy":"113"},{"ruleId":"108","severity":1,"message":"114","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":14},{"ruleId":"104","replacedBy":"115"},{"ruleId":"106","replacedBy":"116"},{"ruleId":"104","replacedBy":"117"},{"ruleId":"106","replacedBy":"118"},{"ruleId":"104","replacedBy":"119"},{"ruleId":"106","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":71,"column":6,"nodeType":"123","endLine":71,"endColumn":33,"suggestions":"124"},{"ruleId":"104","replacedBy":"125"},{"ruleId":"106","replacedBy":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'getMinMaxMessage' is assigned a value but never used.","Identifier","unusedVar",["127"],["128"],"'Button' is defined but never used.",["127"],["128"],["127"],["128"],["127"],["128"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch' and 'updateCountry'. Either include them or remove the dependency array.","ArrayExpression",["129"],["127"],["128"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},"Update the dependencies array to be: [fromDate, toDate, country, dispatch, updateCountry]",{"range":"132","text":"133"},[2175,2202],"[fromDate, toDate, country, dispatch, updateCountry]"]